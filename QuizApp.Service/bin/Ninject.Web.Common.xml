<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ninject.Web.Common</name>
    </assembly>
    <members>
        <member name="T:Ninject.Web.Common.Bootstrapper">
            <summary>
            A basic bootstrapper that can be used to setup web applications.
            </summary>
        </member>
        <member name="F:Ninject.Web.Common.Bootstrapper.kernelInstance">
            <summary>
            The ninject kernel of the application
            </summary>
        </member>
        <member name="P:Ninject.Web.Common.Bootstrapper.Kernel">
            <summary>
            Gets the kernel.
            </summary>
        </member>
        <member name="M:Ninject.Web.Common.Bootstrapper.Initialize(System.Func{Ninject.IKernel})">
            <summary>
            Starts the application.
            </summary>
            <param name="createKernelCallback">The create kernel callback function.</param>
        </member>
        <member name="M:Ninject.Web.Common.Bootstrapper.ShutDown">
            <summary>
            Releases the kernel on application end.
            </summary>
        </member>
        <member name="T:Ninject.Web.Common.IBootstrapper">
            <summary>
            A basic bootstrapper that can be used to setup web applications.
            </summary>
        </member>
        <member name="M:Ninject.Web.Common.IBootstrapper.Initialize(System.Func{Ninject.IKernel})">
            <summary>
            Starts the application.
            </summary>
            <param name="createKernelCallback">The create kernel callback function.</param>
        </member>
        <member name="M:Ninject.Web.Common.IBootstrapper.ShutDown">
            <summary>
            Releases the kernel on application end.
            </summary>
        </member>
        <member name="T:Ninject.Web.Common.INinjectHttpApplicationPlugin">
            <summary>
            Interface for the plugins of Ninject.Web.Common
            </summary>
        </member>
        <member name="M:Ninject.Web.Common.INinjectHttpApplicationPlugin.GetRequestScope(Ninject.Activation.IContext)">
            <summary>
            Gets the request scope.
            </summary>
            <param name="context">The context.</param>
            <returns>The request scope.</returns>
        </member>
        <member name="M:Ninject.Web.Common.INinjectHttpApplicationPlugin.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:Ninject.Web.Common.INinjectHttpApplicationPlugin.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="T:Ninject.Web.Common.RequestScopeExtensionMethod">
            <summary>
            Defines extension methods the specify InRequestScope.
            </summary>
        </member>
        <member name="M:Ninject.Web.Common.RequestScopeExtensionMethod.InRequestScope``1(Ninject.Syntax.IBindingInSyntax{``0})">
            <summary>
            Sets the scope to request scope.
            </summary>
            <typeparam name="T">The type of the service.</typeparam>
            <param name="syntax">The syntax.</param>
            <returns>The syntax to define more information.</returns>
        </member>
        <member name="M:Ninject.Web.Common.RequestScopeExtensionMethod.GetScope(Ninject.Activation.IContext)">
            <summary>
            Gets the scope.
            </summary>
            <param name="ctx">The context.</param>
            <returns>The scope.</returns>
        </member>
    </members>
</doc>
